version: "3"

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    volumes:
      - .:/app
      - app-storage:/app/backend/storage
      - ./backend/config/.env:/app/backend/config/.env
    depends_on:
      - db

  smtp:
    build:
      context: ./smtp
      dockerfile: Dockerfile
    ports:
      - "25:25"

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: habibi2023
      MYSQL_DATABASE: streamer_golang
      MYSQL_USER: ilia
      MYSQL_PASSWORD: Hbk2017qqw.
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  nginx:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - app-storage:/app/backend/storage
    command: ["/usr/local/bin/wait-for-it.sh", "app:8000", "--", "nginx", "-g", "daemon off;"]
    restart: always
    depends_on:
      - app

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "8080:8000"
      - "9443:9443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    restart: always

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    environment:
      - NODE_ENV=production

volumes:
  mysql-data:
  app-storage:
  portainer_data:
